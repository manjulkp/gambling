<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="1" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-07-31T06:20:46Z" name="Default suite" finished-at="2019-07-31T06:21:34Z" duration-ms="47582">
    <groups>
      <group name="cucumber">
        <method signature="TestRunner.scenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Listener.TestRunner@484970b0]" name="scenario" class="Listener.TestRunner"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2019-07-31T06:20:46Z" name="Default test" finished-at="2019-07-31T06:21:34Z" duration-ms="47582">
      <class name="Listener.TestRunner">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Listener.TestRunner@484970b0]" started-at="2019-07-31T06:20:37Z" name="setUp" finished-at="2019-07-31T06:20:46Z" duration-ms="9164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Listener.TestRunner@484970b0]" started-at="2019-07-31T06:20:46Z" name="setUpClass" finished-at="2019-07-31T06:20:47Z" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="scenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Listener.TestRunner@484970b0]" started-at="2019-07-31T06:20:47Z" name="scenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-07-31T06:21:33Z" duration-ms="46457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate user flow of  onboarding screen"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Listener.TestRunner@484970b0]" started-at="2019-07-31T06:21:33Z" name="tearDownClass" finished-at="2019-07-31T06:21:34Z" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:Listener.TestRunner@484970b0]" started-at="2019-07-31T06:21:34Z" name="generateReport" finished-at="2019-07-31T06:21:36Z" duration-ms="1772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Listener.TestRunner@484970b0]" started-at="2019-07-31T06:21:36Z" name="tearDown" finished-at="2019-07-31T06:21:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Listener.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
